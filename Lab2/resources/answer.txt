1)Что такое класс, что такое объект, как создать объект класса?
    Класс  — в объектно-ориентированном программировании, модель для создания объектов определённого типа, описывающая 
    их структуру (набор полей и их начальное состояние) и определяющая алгоритмы (функции или методы) для работы с этими объектами.
    Объект -- это сущность, служащая контейнером для данных и управляющая доступом к этим данным. С объектом связан набор атрибутов,
    которые сущности представляют собой просто переменные, принадлежащие объекту.
    Пример: имя_переменной = Имя_класса.new()
2)В чем заключается принцип инкапсуляции? Как получить доступ к полям объекта из внешнего класса?
    Инкапсуляция в программировании — это принцип, согласно которому внутреннее устройство сущностей нужно объединять в специальной 
    «оболочке» и скрывать от вмешательств извне. Доступ к объектам возможен через специальные открытые методы, а напрямую обратиться 
    к их содержимому нельзя.
    Доступ к полям из внешнего класса осуществяется с помощью свойств.
3)Как используются символы для решения задач инкапсуляции и уменьшения количества кода при описании класса?

4)Что такое конструктор, зачем он нужен, как описывается конструктор в произвольном классе?
    Конструктор это специальный метод, который вызывается сразу при выделении пямяти для объекта. 
    Пример: 
        def initialize(набор_атрибутов)
        end
5)Опишите механизм создания объект.
    Выделяется память, вызывается конструктор оьъекта.
6)Что такое метод класса, в чем его отличие от метода объекта? Приведите два практических примера, когда введение метода класса вы 
считаете необходимым согласно концепциям ООП.
    Метод класса - это метод не прявязаный к объекту. Практические примеры: Подсчет и вывод количества объектов, проверка коректности 
    введенных данных в конструктор. 


1) Как вызвать родительский конструктор?
class A 
    def initialize(a, b, c)
        @a = a 
        @b = b
        @c = c 
    end
end

class B < A 
    def initialize(e, a, b, c)
        @e = e
        super()
    end
end

class C < A 
    def initialize()
        super 
    end
end



3)Сравнение объектов
== - просто сравнивает объекты не обращая внимания на их классы 
equal? - тот же объект 
eql? - сравнивает ключи

2) 